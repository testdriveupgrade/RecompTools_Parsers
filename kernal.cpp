#include <iostream>
#include <ostream>

#include "ppc/ppc_recomp_shared.h"
#define PPC_FUNC_THROW(x) PPC_FUNC(x) { throw std::runtime_error("Missing Kernel Call: " #x); }

PPC_FUNC_THROW(__imp__XNotifyDelayUI);
PPC_FUNC_THROW(__imp__XNotifyPositionUI);
PPC_FUNC_THROW(__imp__XGetVideoMode);
PPC_FUNC_THROW(__imp__XamLoaderGetLaunchDataSize);
PPC_FUNC_THROW(__imp__XamLoaderGetLaunchData);
PPC_FUNC_THROW(__imp__XNotifyGetNext);
PPC_FUNC_THROW(__imp__XamLoaderSetLaunchData);
PPC_FUNC_THROW(__imp__XMsgStartIORequest);
PPC_FUNC_THROW(__imp__XamUserGetName);
PPC_FUNC_THROW(__imp__XamUserGetSigninState);
PPC_FUNC_THROW(__imp__XamGetSystemVersion);
PPC_FUNC_THROW(__imp__XamUserCreateStatsEnumerator);
PPC_FUNC_THROW(__imp__XamWriteGamerTile);
PPC_FUNC_THROW(__imp__XamUserCreateAchievementEnumerator);
PPC_FUNC_THROW(__imp__XamUserGetXUID);
PPC_FUNC_THROW(__imp__XamShowSigninUI);
PPC_FUNC_THROW(__imp__XamShowKeyboardUI);
PPC_FUNC_THROW(__imp__XamShowGamerCardUIForXUID);
PPC_FUNC_THROW(__imp__XamShowMarketplaceUI);
PPC_FUNC_THROW(__imp__XamShowDeviceSelectorUI);
PPC_FUNC_THROW(__imp__XamShowDirtyDiscErrorUI);
PPC_FUNC_THROW(__imp__XamInputGetCapabilities);
PPC_FUNC_THROW(__imp__XamInputGetState);
PPC_FUNC_THROW(__imp__XamInputSetState);
PPC_FUNC_THROW(__imp__XGetGameRegion);
PPC_FUNC_THROW(__imp__XamNotifyCreateListener);
PPC_FUNC_THROW(__imp__XamLoaderLaunchTitle);
PPC_FUNC_THROW(__imp__XamEnumerate);
PPC_FUNC_THROW(__imp__XamTaskShouldExit);
PPC_FUNC_THROW(__imp__XamTaskCloseHandle);
PPC_FUNC_THROW(__imp__XamTaskSchedule);
PPC_FUNC_THROW(__imp__XamContentCreateEx);
PPC_FUNC_THROW(__imp__XamContentDelete);
PPC_FUNC_THROW(__imp__XamContentClose);
PPC_FUNC_THROW(__imp__XamContentGetCreator);
PPC_FUNC_THROW(__imp__XamContentGetLicenseMask);
PPC_FUNC_THROW(__imp__XamContentCreateEnumerator);
PPC_FUNC_THROW(__imp__XamContentGetDeviceState);
PPC_FUNC_THROW(__imp__XamContentGetDeviceData);
PPC_FUNC_THROW(__imp__XamGetExecutionId);
PPC_FUNC_THROW(__imp__XamAlloc);
PPC_FUNC_THROW(__imp__XamFree);
PPC_FUNC_THROW(__imp__XamGetOverlappedResult);
PPC_FUNC_THROW(__imp__XMsgCompleteIORequest);
PPC_FUNC_THROW(__imp__XMsgInProcessCall);
PPC_FUNC_THROW(__imp__XamGetPrivateEnumStructureFromHandle);
PPC_FUNC_THROW(__imp__XamUserGetSigninInfo);
PPC_FUNC_THROW(__imp__XMsgCancelIORequest);
PPC_FUNC_THROW(__imp__XamShowMessageBoxUIEx);
PPC_FUNC_THROW(__imp__XGetLanguage);
PPC_FUNC_THROW(__imp__XGetAVPack);
PPC_FUNC_THROW(__imp__XamLoaderTerminateTitle);
PPC_FUNC_THROW(__imp__KeTlsGetValue);
PPC_FUNC_THROW(__imp__KeTlsSetValue);
PPC_FUNC_THROW(__imp__NtCreateEvent);
PPC_FUNC_THROW(__imp__ObDereferenceObject);
PPC_FUNC_THROW(__imp__KeSetBasePriorityThread);
PPC_FUNC_THROW(__imp__ObReferenceObjectByHandle);
PPC_FUNC_THROW(__imp__KeQueryBasePriorityThread);
PPC_FUNC_THROW(__imp__KeSetAffinityThread);
PPC_FUNC_THROW(__imp__NtSetEvent);
PPC_FUNC_THROW(__imp__NtClearEvent);
PPC_FUNC_THROW(__imp__MmAllocatePhysicalMemoryEx);
PPC_FUNC_THROW(__imp__MmSetAddressProtect);
PPC_FUNC_THROW(__imp__MmFreePhysicalMemory);
PPC_FUNC_THROW(__imp__MmQueryAddressProtect);
PPC_FUNC_THROW(__imp__RtlInitAnsiString);
PPC_FUNC_THROW(__imp__NtCreateSemaphore);
PPC_FUNC_THROW(__imp__NtReleaseSemaphore);
PPC_FUNC_THROW(__imp__NtQueryFullAttributesFile);
PPC_FUNC_THROW(__imp__DbgBreakPoint);
PPC_FUNC_THROW(__imp__XexCheckExecutablePrivilege);
PPC_FUNC_THROW(__imp__NtQueryVirtualMemory);
PPC_FUNC_THROW(__imp__MmQueryStatistics);
PPC_FUNC_THROW(__imp__KeQuerySystemTime);
PPC_FUNC_THROW(__imp__RtlTimeToTimeFields);
PPC_FUNC_THROW(__imp__ExGetXConfigSetting);
PPC_FUNC_THROW(__imp__XexUnloadImage);
PPC_FUNC_THROW(__imp__XexGetProcedureAddress);
PPC_FUNC_THROW(__imp__XexLoadImage);
PPC_FUNC_THROW(__imp__StfsControlDevice);
PPC_FUNC_THROW(__imp__StfsCreateDevice);
PPC_FUNC_THROW(__imp__NtQueryVolumeInformationFile);
PPC_FUNC_THROW(__imp__NtClose);
PPC_FUNC_THROW(__imp__NtOpenFile);
PPC_FUNC_THROW(__imp____C_specific_handler);
PPC_FUNC_THROW(__imp__XeKeysConsoleSignatureVerification);
PPC_FUNC_THROW(__imp__XeCryptSha);
PPC_FUNC_THROW(__imp__NtWriteFile);
PPC_FUNC_THROW(__imp__NtReadFile);
PPC_FUNC_THROW(__imp__XeKeysConsolePrivateKeySign);
PPC_FUNC_THROW(__imp__NtCreateFile);
PPC_FUNC_THROW(__imp__NtFreeVirtualMemory);
PPC_FUNC_THROW(__imp__NtAllocateVirtualMemory);
PPC_FUNC_THROW(__imp___snprintf);
PPC_FUNC_THROW(__imp__KeLeaveCriticalRegion);
PPC_FUNC_THROW(__imp__NtFlushBuffersFile);
PPC_FUNC_THROW(__imp__KeEnterCriticalRegion);
PPC_FUNC_THROW(__imp__IoDismountVolume);
PPC_FUNC_THROW(__imp__RtlNtStatusToDosError);
PPC_FUNC_THROW(__imp__ObCreateSymbolicLink);
PPC_FUNC_THROW(__imp__ObDeleteSymbolicLink);
PPC_FUNC_THROW(__imp__RtlLeaveCriticalSection);
PPC_FUNC_THROW(__imp__KeResetEvent);
PPC_FUNC_THROW(__imp__KeWaitForSingleObject);
PPC_FUNC_THROW(__imp__KeSetEvent);
PPC_FUNC_THROW(__imp__NtWaitForSingleObjectEx);
PPC_FUNC_THROW(__imp__NtResumeThread);
PPC_FUNC_THROW(__imp__KeGetCurrentProcessType);
PPC_FUNC_THROW(__imp__NtSetInformationFile);
PPC_FUNC_THROW(__imp__XexGetModuleHandle);
PPC_FUNC_THROW(__imp__NtYieldExecution);
PPC_FUNC_THROW(__imp__DbgPrint);
PPC_FUNC_THROW(__imp__NtQueryInformationFile);
PPC_FUNC_THROW(__imp__NtQueryDirectoryFile);
PPC_FUNC_THROW(__imp__NtReadFileScatter);
PPC_FUNC_THROW(__imp__NtDuplicateObject);
PPC_FUNC_THROW(__imp__RtlUnicodeToMultiByteN);
PPC_FUNC_THROW(__imp__KeDelayExecutionThread);
PPC_FUNC_THROW(__imp__RtlTimeFieldsToTime);
PPC_FUNC_THROW(__imp__IoInvalidDeviceRequest);
PPC_FUNC_THROW(__imp__ObReferenceObject);
PPC_FUNC_THROW(__imp__RtlInitializeCriticalSection);
PPC_FUNC_THROW(__imp__IoCreateDevice);
PPC_FUNC_THROW(__imp__IoDeleteDevice);
PPC_FUNC_THROW(__imp__ExAllocatePoolTypeWithTag);
PPC_FUNC_THROW(__imp__ExFreePool);
PPC_FUNC_THROW(__imp__RtlCompareStringN);
PPC_FUNC_THROW(__imp__IoCompleteRequest);
PPC_FUNC_THROW(__imp__NtWriteFileGather);
PPC_FUNC_THROW(__imp__KfReleaseSpinLock);
PPC_FUNC_THROW(__imp__KfAcquireSpinLock);
PPC_FUNC_THROW(__imp__ExCreateThread);
PPC_FUNC_THROW(__imp__RtlUpcaseUnicodeChar);
PPC_FUNC_THROW(__imp__ObIsTitleObject);
PPC_FUNC_THROW(__imp__IoCheckShareAccess);
PPC_FUNC_THROW(__imp__IoSetShareAccess);
PPC_FUNC_THROW(__imp__IoRemoveShareAccess);
PPC_FUNC_THROW(__imp__IoDismountVolumeByFileHandle);
PPC_FUNC_THROW(__imp__NtDeviceIoControlFile);
PPC_FUNC_THROW(__imp__HalReturnToFirmware);
PPC_FUNC_THROW(__imp__RtlFillMemoryUlong);
PPC_FUNC_THROW(__imp__KeBugCheckEx);
PPC_FUNC_THROW(__imp__RtlCompareMemoryUlong);
PPC_FUNC_THROW(__imp__RtlRaiseException);
PPC_FUNC_THROW(__imp__VdSetSystemCommandBufferGpuIdentifierAddress);
PPC_FUNC_THROW(__imp__KiApcNormalRoutineNop);
PPC_FUNC_THROW(__imp__MmGetPhysicalAddress);
PPC_FUNC_THROW(__imp__KeReleaseSpinLockFromRaisedIrql);
PPC_FUNC_THROW(__imp__KeInsertQueueDpc);
PPC_FUNC_THROW(__imp__VdEnableRingBufferRPtrWriteBack);
PPC_FUNC_THROW(__imp__VdInitializeRingBuffer);
PPC_FUNC_THROW(__imp__KeAcquireSpinLockAtRaisedIrql);
PPC_FUNC_THROW(__imp__VdEnableDisableClockGating);
PPC_FUNC_THROW(__imp__KeQueryPerformanceFrequency);
PPC_FUNC_THROW(__imp__VdPersistDisplay);
PPC_FUNC_THROW(__imp__VdSwap);
PPC_FUNC_THROW(__imp__VdGetSystemCommandBuffer);
PPC_FUNC_THROW(__imp__sprintf);
PPC_FUNC_THROW(__imp__KeBugCheck);
PPC_FUNC_THROW(__imp__VdGetCurrentDisplayGamma);
PPC_FUNC_THROW(__imp__KeInitializeDpc);
PPC_FUNC_THROW(__imp__KeLockL2);
PPC_FUNC_THROW(__imp__KeUnlockL2);
PPC_FUNC_THROW(__imp__VdSetDisplayMode);
PPC_FUNC_THROW(__imp__VdQueryVideoMode);
PPC_FUNC_THROW(__imp__VdGetCurrentDisplayInformation);
PPC_FUNC_THROW(__imp__VdQueryVideoFlags);
PPC_FUNC_THROW(__imp__VdSetGraphicsInterruptCallback);
PPC_FUNC_THROW(__imp__VdSetDisplayModeOverride);
PPC_FUNC_THROW(__imp__VdInitializeEngines);
PPC_FUNC_THROW(__imp__VdIsHSIOTrainingSucceeded);
PPC_FUNC_THROW(__imp__VdShutdownEngines);
PPC_FUNC_THROW(__imp__VdCallGraphicsNotificationRoutines);
PPC_FUNC_THROW(__imp___vsnprintf);
PPC_FUNC_THROW(__imp__VdInitializeScalerCommandBuffer);
PPC_FUNC_THROW(__imp__VdRetrainEDRAM);
PPC_FUNC_THROW(__imp__VdRetrainEDRAMWorker);
PPC_FUNC_THROW(__imp__KeSetCurrentProcessType);
PPC_FUNC_THROW(__imp__NetDll_XNetStartup);
PPC_FUNC_THROW(__imp__NetDll_XNetCleanup);
PPC_FUNC_THROW(__imp__NetDll_XNetRandom);
PPC_FUNC_THROW(__imp__NetDll_XNetCreateKey);
PPC_FUNC_THROW(__imp__NetDll_XNetRegisterKey);
PPC_FUNC_THROW(__imp__NetDll_XNetUnregisterKey);
PPC_FUNC_THROW(__imp__NetDll_XNetXnAddrToInAddr);
PPC_FUNC_THROW(__imp__NetDll_XNetServerToInAddr);
PPC_FUNC_THROW(__imp__NetDll_XNetTsAddrToInAddr);
PPC_FUNC_THROW(__imp__NetDll_XNetInAddrToXnAddr);
PPC_FUNC_THROW(__imp__NetDll_XNetInAddrToString);
PPC_FUNC_THROW(__imp__NetDll_XNetUnregisterInAddr);
PPC_FUNC_THROW(__imp__NetDll_XNetConnect);
PPC_FUNC_THROW(__imp__NetDll_XNetGetConnectStatus);
PPC_FUNC_THROW(__imp__NetDll_XNetGetTitleXnAddr);
PPC_FUNC_THROW(__imp__NetDll_WSAStartup);
PPC_FUNC_THROW(__imp__NetDll_WSACleanup);
PPC_FUNC_THROW(__imp__NetDll_socket);
PPC_FUNC_THROW(__imp__NetDll_closesocket);
PPC_FUNC_THROW(__imp__NetDll_ioctlsocket);
PPC_FUNC_THROW(__imp__NetDll_setsockopt);
PPC_FUNC_THROW(__imp__NetDll_bind);
PPC_FUNC_THROW(__imp__NetDll_connect);
PPC_FUNC_THROW(__imp__NetDll_select);
PPC_FUNC_THROW(__imp__NetDll_recv);
PPC_FUNC_THROW(__imp__NetDll_recvfrom);
PPC_FUNC_THROW(__imp__NetDll_send);
PPC_FUNC_THROW(__imp__NetDll_sendto);
PPC_FUNC_THROW(__imp__NetDll_inet_addr);
PPC_FUNC_THROW(__imp__NetDll_WSAGetLastError);
PPC_FUNC_THROW(__imp__NetDll___WSAFDIsSet);
PPC_FUNC_THROW(__imp__XamSessionRefObjByHandle);
PPC_FUNC_THROW(__imp__XamSessionCreateHandle);
PPC_FUNC_THROW(__imp__XNetLogonGetTitleID);
PPC_FUNC_THROW(__imp__XamCreateEnumeratorHandle);
PPC_FUNC_THROW(__imp__XamUserReadProfileSettings);
PPC_FUNC_THROW(__imp__XamUserGetMembershipTierFromXUID);
PPC_FUNC_THROW(__imp__XamUserGetOnlineCountryFromXUID);
PPC_FUNC_THROW(__imp__XMsgStartIORequestEx);
PPC_FUNC_THROW(__imp__RtlTryEnterCriticalSection);
PPC_FUNC_THROW(__imp__XAudioGetVoiceCategoryVolume);
PPC_FUNC_THROW(__imp__MmMapIoSpace);
PPC_FUNC_THROW(__imp__XMACreateContext);
PPC_FUNC_THROW(__imp__XMAReleaseContext);
PPC_FUNC_THROW(__imp__KeWaitForMultipleObjects);
PPC_FUNC_THROW(__imp__XAudioSubmitRenderDriverFrame);
PPC_FUNC_THROW(__imp__XAudioUnregisterRenderDriverClient);
PPC_FUNC_THROW(__imp__XAudioRegisterRenderDriverClient);
PPC_FUNC_THROW(__imp__XAudioGetSpeakerConfig);
PPC_FUNC_THROW(__imp__KeTlsAlloc);
PPC_FUNC_THROW(__imp__RtlUnwind);
PPC_FUNC_THROW(__imp__KeTlsFree);
PPC_FUNC_THROW(__imp__RtlInitializeCriticalSectionAndSpinCount);
PPC_FUNC_THROW(__imp__ExTerminateThread);
PPC_FUNC_THROW(__imp__RtlFreeAnsiString);
PPC_FUNC_THROW(__imp__RtlUnicodeStringToAnsiString);
PPC_FUNC_THROW(__imp__RtlInitUnicodeString);
PPC_FUNC_THROW(__imp__RtlMultiByteToUnicodeN);
PPC_FUNC_THROW(__imp__NtCreateMutant);
PPC_FUNC_THROW(__imp__NtReleaseMutant);
PPC_FUNC_THROW(__imp__RtlCaptureContext);
PPC_FUNC_THROW(__imp__ExRegisterTitleTerminateNotification);
PPC_FUNC_THROW(__imp__NetDll_getsockopt);
PPC_FUNC_THROW(__imp__NetDll_getsockname);
PPC_FUNC_THROW(__imp__NetDll_getpeername);
PPC_FUNC_THROW(__imp__NetDll_listen);
PPC_FUNC_THROW(__imp__NetDll_shutdown);
PPC_FUNC_THROW(__imp__NetDll_accept);
PPC_FUNC_THROW(__imp__NetDll_XNetQosListen);
PPC_FUNC_THROW(__imp__NetDll_XNetQosLookup);
PPC_FUNC_THROW(__imp__NetDll_XNetQosRelease);
PPC_FUNC_THROW(__imp__NetDll_XNetQosServiceLookup);
PPC_FUNC_THROW(__imp__NetDll_WSASend);
PPC_FUNC_THROW(__imp__NetDll_WSASendTo);
PPC_FUNC_THROW(__imp__NetDll_WSARecv);
PPC_FUNC_THROW(__imp__NetDll_WSARecvFrom);
PPC_FUNC_THROW(__imp_XamVoiceSubmitPacket);
PPC_FUNC_THROW(__imp_XMsgCancelIORequest);
PPC_FUNC_THROW(__imp_XamVoiceClose);
PPC_FUNC_THROW(__imp_XamVoiceHeadsetPresent);
PPC_FUNC_THROW(__imp_XamUserGetMembershipTierFromXUID);
PPC_FUNC_THROW(__imp_XamUserGetOnlineCountryFromXUID);
PPC_FUNC_THROW(__imp_XNetLogonGetMachineID);
PPC_FUNC_THROW(__imp_XMsgSystemProcessCall);
PPC_FUNC_THROW(__imp_XamGetPrivateEnumStructureFromHandle);
PPC_FUNC_THROW(__imp_XMsgStartIORequestEx);
PPC_FUNC_THROW(__imp_XamCreateEnumeratorHandle);
PPC_FUNC_THROW(__imp_XNotifyPositionUI);
PPC_FUNC_THROW(__imp_XamGetExecutionId);
PPC_FUNC_THROW(__imp_XamInputGetKeystrokeEx);
PPC_FUNC_THROW(__imp_XamInputSetState);
PPC_FUNC_THROW(__imp_XamInputGetState);
PPC_FUNC_THROW(__imp_XamInputGetCapabilities);
PPC_FUNC_THROW(__imp_XamLoaderTerminateTitle);
PPC_FUNC_THROW(__imp_XNotifyGetNext);
PPC_FUNC_THROW(__imp_XGetVideoMode);
PPC_FUNC_THROW(__imp_XGetGameRegion);
PPC_FUNC_THROW(__imp_NetDll_XNetStartup);
PPC_FUNC_THROW(__imp_XamGetSystemVersion);
PPC_FUNC_THROW(__imp_NetDll_XNetCleanup);
PPC_FUNC_THROW(__imp_NetDll_XNetRandom);
PPC_FUNC_THROW(__imp_NetDll_XNetCreateKey);
PPC_FUNC_THROW(__imp_NetDll_XNetRegisterKey);
PPC_FUNC_THROW(__imp_NetDll_XNetUnregisterKey);
PPC_FUNC_THROW(__imp_NetDll_XNetXnAddrToInAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetServerToInAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetTsAddrToInAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetInAddrToXnAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetInAddrToServer);
PPC_FUNC_THROW(__imp_NetDll_XNetInAddrToString);
PPC_FUNC_THROW(__imp_NetDll_XNetUnregisterInAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetXnAddrToMachineId);
PPC_FUNC_THROW(__imp_NetDll_XNetConnect);
PPC_FUNC_THROW(__imp_NetDll_XNetGetConnectStatus);
PPC_FUNC_THROW(__imp_NetDll_XNetDnsLookup);
PPC_FUNC_THROW(__imp_NetDll_XNetDnsRelease);
PPC_FUNC_THROW(__imp_NetDll_XNetQosListen);
PPC_FUNC_THROW(__imp_NetDll_XNetQosLookup);
PPC_FUNC_THROW(__imp_NetDll_XNetQosServiceLookup);
PPC_FUNC_THROW(__imp_NetDll_XNetQosRelease);
PPC_FUNC_THROW(__imp_NetDll_XNetGetTitleXnAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetGetDebugXnAddr);
PPC_FUNC_THROW(__imp_NetDll_XNetGetEthernetLinkStatus);
PPC_FUNC_THROW(__imp_NetDll_XNetGetBroadcastVersionStatus);
PPC_FUNC_THROW(__imp_NetDll_XNetQosGetListenStats);
PPC_FUNC_THROW(__imp_NetDll_XNetGetOpt);
PPC_FUNC_THROW(__imp_NetDll_XNetSetOpt);
PPC_FUNC_THROW(__imp_NetDll_WSAStartup);
PPC_FUNC_THROW(__imp_NetDll_WSACleanup);
PPC_FUNC_THROW(__imp_NetDll_socket);
PPC_FUNC_THROW(__imp_NetDll_closesocket);
PPC_FUNC_THROW(__imp_NetDll_shutdown);
PPC_FUNC_THROW(__imp_NetDll_ioctlsocket);
PPC_FUNC_THROW(__imp_NetDll_setsockopt);
PPC_FUNC_THROW(__imp_NetDll_getsockopt);
PPC_FUNC_THROW(__imp_NetDll_getsockname);
PPC_FUNC_THROW(__imp_NetDll_getpeername);
PPC_FUNC_THROW(__imp_NetDll_bind);
PPC_FUNC_THROW(__imp_NetDll_connect);
PPC_FUNC_THROW(__imp_NetDll_listen);
PPC_FUNC_THROW(__imp_NetDll_accept);
PPC_FUNC_THROW(__imp_NetDll_select);
PPC_FUNC_THROW(__imp_NetDll_WSAGetOverlappedResult);
PPC_FUNC_THROW(__imp_NetDll_WSACancelOverlappedIO);
PPC_FUNC_THROW(__imp_NetDll_recv);
PPC_FUNC_THROW(__imp_NetDll_WSARecv);
PPC_FUNC_THROW(__imp_NetDll_recvfrom);
PPC_FUNC_THROW(__imp_NetDll_WSARecvFrom);
PPC_FUNC_THROW(__imp_NetDll_send);
PPC_FUNC_THROW(__imp_NetDll_WSASend);
PPC_FUNC_THROW(__imp_NetDll_sendto);
PPC_FUNC_THROW(__imp_NetDll_WSASendTo);
PPC_FUNC_THROW(__imp_NetDll_WSAEventSelect);
PPC_FUNC_THROW(__imp_NetDll_inet_addr);
PPC_FUNC_THROW(__imp_NetDll_WSAGetLastError);
PPC_FUNC_THROW(__imp_NetDll_WSASetLastError);
PPC_FUNC_THROW(__imp_NetDll_WSACreateEvent);
PPC_FUNC_THROW(__imp_NetDll_WSACloseEvent);
PPC_FUNC_THROW(__imp_NetDll_WSASetEvent);
PPC_FUNC_THROW(__imp_NetDll_WSAResetEvent);
PPC_FUNC_THROW(__imp_NetDll_WSAWaitForMultipleEvents);
PPC_FUNC_THROW(__imp_NetDll___WSAFDIsSet);
PPC_FUNC_THROW(__imp_XamUserReadProfileSettings);
PPC_FUNC_THROW(__imp_XamUserWriteProfileSettings);
PPC_FUNC_THROW(__imp_XamUserGetXUID);
PPC_FUNC_THROW(__imp_XMsgInProcessCall);
PPC_FUNC_THROW(__imp_XamFree);
PPC_FUNC_THROW(__imp_XamAlloc);
PPC_FUNC_THROW(__imp_XMsgStartIORequest);
PPC_FUNC_THROW(__imp_XamSessionRefObjByHandle);
PPC_FUNC_THROW(__imp_XamSessionCreateHandle);
PPC_FUNC_THROW(__imp_XNetLogonGetTitleID);
PPC_FUNC_THROW(__imp_NetDll_XnpLoadConfigParams);
PPC_FUNC_THROW(__imp_NetDll_XnpSaveConfigParams);
PPC_FUNC_THROW(__imp_NetDll_XnpConfigUPnP);
PPC_FUNC_THROW(__imp_NetDll_XnpConfig);
PPC_FUNC_THROW(__imp_NetDll_XnpGetConfigStatus);
PPC_FUNC_THROW(__imp_NetDll_XnpLoadMachineAccount);
PPC_FUNC_THROW(__imp_NetDll_XnpSaveMachineAccount);
PPC_FUNC_THROW(__imp_NetDll_XnpCapture);
PPC_FUNC_THROW(__imp_NetDll_XnpEthernetInterceptSetCallbacks);
PPC_FUNC_THROW(__imp_NetDll_XnpEthernetInterceptXmit);
PPC_FUNC_THROW(__imp_NetDll_XnpEthernetInterceptRecv);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonGetStatus);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonGetQFlags);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonSetQFlags);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonSetQEvent);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonClearQEvent);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonGetQVals);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonSetQVals);
PPC_FUNC_THROW(__imp_NetDll_XnpLogonSetPState);
PPC_FUNC_THROW(__imp_NetDll_XnpGetVlanXboxName);
PPC_FUNC_THROW(__imp_NetDll_XnpSetVlanXboxName);
PPC_FUNC_THROW(__imp_NetDll_XnpGetActiveSocketList);
PPC_FUNC_THROW(__imp_NetDll_XnpNoteSystemTime);
PPC_FUNC_THROW(__imp_NetDll_XnpRegisterKeyForCallerType);
PPC_FUNC_THROW(__imp_NetDll_XnpUnregisterKeyForCallerType);
PPC_FUNC_THROW(__imp_XamNotifyCreateListener);
PPC_FUNC_THROW(__imp_XamContentCreate);
PPC_FUNC_THROW(__imp_XamContentCreateEx);
PPC_FUNC_THROW(__imp_XamContentDelete);
PPC_FUNC_THROW(__imp_XamContentInstall);
PPC_FUNC_THROW(__imp_XamContentClose);
PPC_FUNC_THROW(__imp_XamContentFlush);
PPC_FUNC_THROW(__imp_XamContentSetThumbnail);
PPC_FUNC_THROW(__imp_XamContentGetThumbnail);
PPC_FUNC_THROW(__imp_XamContentGetCreator);
PPC_FUNC_THROW(__imp_XamContentGetLicenseMask);
PPC_FUNC_THROW(__imp_XamContentCreateEnumerator);
PPC_FUNC_THROW(__imp_XamContentCreateDeviceEnumerator);
PPC_FUNC_THROW(__imp_XamContentGetDeviceState);
PPC_FUNC_THROW(__imp_XamContentGetDeviceData);
PPC_FUNC_THROW(__imp_XamContentGetDeviceName);
PPC_FUNC_THROW(__imp_XamContentLaunchImage);
PPC_FUNC_THROW(__imp_XamContentResolve);
PPC_FUNC_THROW(__imp_XamShowSigninUI);
PPC_FUNC_THROW(__imp_XamShowSigninUIp);
PPC_FUNC_THROW(__imp_XamShowFriendsUI);
PPC_FUNC_THROW(__imp_XamShowPlayersUI);
PPC_FUNC_THROW(__imp_XamShowMessagesUI);
PPC_FUNC_THROW(__imp_XamShowKeyboardUI);
PPC_FUNC_THROW(__imp_XamShowQuickChatUI);
PPC_FUNC_THROW(__imp_XamShowVoiceMailUI);
PPC_FUNC_THROW(__imp_XamShowGamerCardUIForXUID);
PPC_FUNC_THROW(__imp_XamShowAchievementsUI);
PPC_FUNC_THROW(__imp_XamShowPlayerReviewUI);
PPC_FUNC_THROW(__imp_XamShowMarketplaceUI);
PPC_FUNC_THROW(__imp_XamShowDeviceSelectorUI);
PPC_FUNC_THROW(__imp_XamShowMessageBoxUI);
PPC_FUNC_THROW(__imp_XamShowMessageComposeUI);
PPC_FUNC_THROW(__imp_XamShowGameInviteUI);
PPC_FUNC_THROW(__imp_XamShowFriendRequestUI);
PPC_FUNC_THROW(__imp_XamShowDirtyDiscErrorUI);
PPC_FUNC_THROW(__imp_XamCustomSetBannerImage);
PPC_FUNC_THROW(__imp_XamUserGetName);
PPC_FUNC_THROW(__imp_XamUserGetSigninState);
PPC_FUNC_THROW(__imp_XamUserAreUsersFriends);
PPC_FUNC_THROW(__imp_XamUserCheckPrivilege);
PPC_FUNC_THROW(__imp_XamUserCreateStatsEnumerator);
PPC_FUNC_THROW(__imp_XamReadTileToTexture);
PPC_FUNC_THROW(__imp_XamParseGamerTileKey);
PPC_FUNC_THROW(__imp_XamWriteGamerTile);
PPC_FUNC_THROW(__imp_XamUserCreateAchievementEnumerator);
PPC_FUNC_THROW(__imp_XamLoaderLaunchTitle);
PPC_FUNC_THROW(__imp_XamEnumerate);
PPC_FUNC_THROW(__imp_XGetAVPack);
PPC_FUNC_THROW(__imp_XGetLanguage);
PPC_FUNC_THROW(__imp_XamVoiceCreate);
PPC_FUNC_THROW(__imp_KeEnableFpuExceptions);
PPC_FUNC_THROW(__imp_KeTlsFree);
PPC_FUNC_THROW(__imp_KeTlsSetValue);
PPC_FUNC_THROW(__imp_KeTlsGetValue);
PPC_FUNC_THROW(__imp_KeTlsAlloc);
PPC_FUNC_THROW(__imp_RtlUnwind);
PPC_FUNC_THROW(__imp_MmFreePhysicalMemory);
PPC_FUNC_THROW(__imp_VdPersistDisplay);
PPC_FUNC_THROW(__imp_VdSwap);
PPC_FUNC_THROW(__imp_VdGetSystemCommandBuffer);
PPC_FUNC_THROW(__imp_VdEnableDisableClockGating);
PPC_FUNC_THROW(__imp_KeReleaseSpinLockFromRaisedIrql);
PPC_FUNC_THROW(__imp_KeAcquireSpinLockAtRaisedIrql);
PPC_FUNC_THROW(__imp_KfReleaseSpinLock);
PPC_FUNC_THROW(__imp_KfAcquireSpinLock);
PPC_FUNC_THROW(__imp_KiApcNormalRoutineNop_0);
PPC_FUNC_THROW(__imp_VdEnableRingBufferRPtrWriteBack);
PPC_FUNC_THROW(__imp_VdInitializeRingBuffer);
PPC_FUNC_THROW(__imp_MmGetPhysicalAddress);
PPC_FUNC_THROW(__imp_VdSetSystemCommandBufferGpuIdentifierAddress);
PPC_FUNC_THROW(__imp_VdQuerySystemCommandBuffer);
PPC_FUNC_THROW(__imp_sprintf);
PPC_FUNC_THROW(__imp_VdSetSystemCommandBuffer);
PPC_FUNC_THROW(__imp_VdGetCurrentDisplayGamma);
PPC_FUNC_THROW(__imp__vsnprintf);
PPC_FUNC_THROW(__imp_VdShutdownEngines);
PPC_FUNC_THROW(__imp_ExRegisterTitleTerminateNotification);
PPC_FUNC_THROW(__imp_ExGetXConfigSetting);
PPC_FUNC_THROW(__imp_VdQueryVideoMode);
PPC_FUNC_THROW(__imp_VdGetCurrentDisplayInformation);
PPC_FUNC_THROW(__imp_VdSetDisplayMode);
PPC_FUNC_THROW(__imp_VdSetGraphicsInterruptCallback);
PPC_FUNC_THROW(__imp_VdInitializeEngines);
PPC_FUNC_THROW(__imp_VdIsHSIOTrainingSucceeded);
PPC_FUNC_THROW(__imp_KeLeaveCriticalRegion);
PPC_FUNC_THROW(__imp_VdRetrainEDRAM);
PPC_FUNC_THROW(__imp_VdRetrainEDRAMWorker);
//KeEnterCrit
PPC_FUNC_THROW(__imp_KeEnterCriticalRegion);
PPC_FUNC_THROW(__imp_VdQueryVideoFlags);
PPC_FUNC_THROW(__imp_VdCallGraphicsNotificationRoutines);
PPC_FUNC_THROW(__imp_VdInitializeScalerCommandBuffer);
PPC_FUNC_THROW(__imp_RtlFillMemoryUlong);
PPC_FUNC_THROW(__imp_MmAllocatePhysicalMemoryEx);
PPC_FUNC_THROW(__imp_KeLockL2);
PPC_FUNC_THROW(__imp_KeUnlockL2);
PPC_FUNC_THROW(__imp_KeWaitForSingleObject);
PPC_FUNC_THROW(__imp_KeResetEvent);
PPC_FUNC_THROW(__imp_KeSetEvent);
PPC_FUNC_THROW(__imp_KeSetBasePriorityThread);
PPC_FUNC_THROW(__imp_ExCreateThread);
PPC_FUNC_THROW(__imp_vsprintf);
PPC_FUNC_THROW(__imp_DbgBreakPoint);
PPC_FUNC_THROW(__imp_NtOpenFile);
PPC_FUNC_THROW(__imp_RtlInitAnsiString);
PPC_FUNC_THROW(__imp_NtCreateFile);
PPC_FUNC_THROW(__imp_RtlTimeToTimeFields);
PPC_FUNC_THROW(__imp_KeQuerySystemTime);
PPC_FUNC_THROW(__imp_KeQueryPerformanceFrequency);
PPC_FUNC_THROW(__imp_NtClose);
PPC_FUNC_THROW(__imp_NtCreateEvent);
PPC_FUNC_THROW(__imp_XexCheckExecutablePrivilege);
PPC_FUNC_THROW(__imp_MmQueryAllocationSize);
PPC_FUNC_THROW(__imp_MmSetAddressProtect);
PPC_FUNC_THROW(__imp_MmQueryAddressProtect);
PPC_FUNC_THROW(__imp_NtWaitForSingleObjectEx);
PPC_FUNC_THROW(__imp_NtWriteFile);
PPC_FUNC_THROW(__imp_ObOpenObjectByPointer);
PPC_FUNC_THROW(__imp_ObLookupThreadByThreadId);
PPC_FUNC_THROW(__imp_ObReferenceObjectByHandle);
PPC_FUNC_THROW(__imp_KeQueryBasePriorityThread);
PPC_FUNC_THROW(__imp_KeSetDisableBoostThread);
PPC_FUNC_THROW(__imp_NtSuspendThread);
PPC_FUNC_THROW(__imp_NtQueueApcThread);
PPC_FUNC_THROW(__imp_KeSetAffinityThread);
PPC_FUNC_THROW(__imp_NtResumeThread);
PPC_FUNC_THROW(__imp_ExTerminateThread);
PPC_FUNC_THROW(__imp_ObOpenObjectByName);
PPC_FUNC_THROW(__imp_NtPulseEvent);
PPC_FUNC_THROW(__imp_NtCreateSemaphore);
PPC_FUNC_THROW(__imp_NtReleaseSemaphore);
PPC_FUNC_THROW(__imp_NtSignalAndWaitForSingleObjectEx);
PPC_FUNC_THROW(__imp_NtWaitForMultipleObjectsEx);
PPC_FUNC_THROW(__imp_NtReadFile);
PPC_FUNC_THROW(__imp_NtSetInformationFile);
PPC_FUNC_THROW(__imp_NtQueryInformationFile);
PPC_FUNC_THROW(__imp_NtQueryVolumeInformationFile);
PPC_FUNC_THROW(__imp_RtlNtStatusToDosError);
PPC_FUNC_THROW(__imp_NtDeviceIoControlFile);
PPC_FUNC_THROW(__imp_NtReadFileScatter);
PPC_FUNC_THROW(__imp_NtWriteFileGather);
PPC_FUNC_THROW(__imp_NtReleaseMutant);
PPC_FUNC_THROW(__imp_NtCreateMutant);
PPC_FUNC_THROW(__imp_NtSetEvent);
PPC_FUNC_THROW(__imp_NtClearEvent);
PPC_FUNC_THROW(__imp_RtlUnicodeToMultiByteN);
PPC_FUNC_THROW(__imp_NtAllocateVirtualMemory);
PPC_FUNC_THROW(__imp_KeBugCheckEx);
PPC_FUNC_THROW(__imp_NtFreeVirtualMemory);
PPC_FUNC_THROW(__imp_RtlCompareMemoryUlong);
PPC_FUNC_THROW(__imp_RtlCompareMemory);
PPC_FUNC_THROW(__imp_NtQueryVirtualMemory);
PPC_FUNC_THROW(__imp_RtlRaiseException);
PPC_FUNC_THROW(__imp_RtlMultiByteToUnicodeN);
PPC_FUNC_THROW(__imp_RtlFreeAnsiString);
PPC_FUNC_THROW(__imp_RtlUnicodeStringToAnsiString);
PPC_FUNC_THROW(__imp_RtlInitUnicodeString);
PPC_FUNC_THROW(__imp_NtFlushBuffersFile);
PPC_FUNC_THROW(__imp_NtQueryDirectoryFile);
PPC_FUNC_THROW(__imp_KeDelayExecutionThread);
PPC_FUNC_THROW(__imp_XexUnloadImage);
PPC_FUNC_THROW(__imp_XexUnloadImageAndExitThread);
PPC_FUNC_THROW(__imp_XexLoadImage);
PPC_FUNC_THROW(__imp_XexGetModuleSection);
//PPC_FUNC_THROW(__imp_RtlImageXexHeaderField);
PPC_FUNC_THROW(__imp_HalReturnToFirmware);
PPC_FUNC_THROW(__imp_NtCreateIoCompletion);
PPC_FUNC_THROW(__imp_NtSetIoCompletion);
PPC_FUNC_THROW(__imp_NtRemoveIoCompletion);
PPC_FUNC_THROW(__imp_RtlTimeFieldsToTime);
PPC_FUNC_THROW(__imp_XMAReleaseContext);
PPC_FUNC_THROW(__imp_XMACreateContext);
PPC_FUNC_THROW(__imp_XAudioQueryDriverPerformance);
PPC_FUNC_THROW(__imp_KeRaiseIrqlToDpcLevel);
PPC_FUNC_THROW(__imp_KfLowerIrql);
PPC_FUNC_THROW(__imp_KeTryToAcquireSpinLockAtRaisedIrql);
PPC_FUNC_THROW(__imp_ExAllocatePoolWithTag);
PPC_FUNC_THROW(__imp_ExFreePool);
PPC_FUNC_THROW(__imp_MmAllocatePhysicalMemory);
PPC_FUNC_THROW(__imp_KeReleaseSemaphore);
PPC_FUNC_THROW(__imp_XAudioGetVoiceCategoryVolume);
PPC_FUNC_THROW(__imp_XAudioGetVoiceCategoryVolumeChangeMask);
PPC_FUNC_THROW(__imp_KeWaitForMultipleObjects);
PPC_FUNC_THROW(__imp_KeResumeThread);
PPC_FUNC_THROW(__imp_KeInitializeSemaphore);
PPC_FUNC_THROW(__imp_XAudioRegisterRenderDriverClient);
PPC_FUNC_THROW(__imp_XAudioUnregisterRenderDriverClient);
PPC_FUNC_THROW(__imp_XAudioSubmitRenderDriverFrame);
PPC_FUNC_THROW(__imp_RtlCaptureContext);
PPC_FUNC_THROW(__imp_KeBugCheck);
PPC_FUNC_THROW(__imp___C_specific_handler);
PPC_FUNC_THROW(__imp_KeGetCurrentProcessType);
PPC_FUNC_THROW(__imp_DbgPrint);
PPC_FUNC_THROW(__imp_ObDereferenceObject);
PPC_FUNC_THROW(__imp_XexGetModuleHandle);
PPC_FUNC_THROW(__imp_XexGetProcedureAddress);
PPC_FUNC_THROW(__imp_RtlTryEnterCriticalSection);
PPC_FUNC_THROW(__imp_RtlInitializeCriticalSectionAndSpinCount);
//PPC_FUNC_THROW(__imp_RtlEnterCriticalSection);
PPC_FUNC_THROW(__imp_RtlLeaveCriticalSection);
PPC_FUNC_THROW(__imp_RtlInitializeCriticalSection);
PPC_FUNC_THROW(__imp_NtCancelTimer);
PPC_FUNC_THROW(__imp_NtSetTimerEx);
PPC_FUNC_THROW(__imp_NtCreateTimer);
PPC_FUNC_THROW(__imp_NtDuplicateObject);

PPC_FUNC_THROW(__cdecl__imp_NetDll_WSAEventSelect);

PPC_FUNC_THROW(__imp__NetDll_XNetInAddrToServer);
PPC_FUNC_THROW(__imp__NetDll_XNetXnAddrToMachineId);
PPC_FUNC_THROW(__imp__XNetLogonGetMachineId);
PPC_FUNC_THROW(__imp__NtCreateTimer);
PPC_FUNC_THROW(__imp__NtCancelTimer);

PPC_FUNC_THROW(__imp__KeEnableFpuExceptions)
PPC_FUNC_THROW(__imp__NetDll_XNetDnsLookup);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetDnsRelease);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetGetDebugXnAddr);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetGetEthernetLinkStatus);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetGetBroadcastVersionStatus);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetQosGetListenStats);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetGetOpt);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XNetSetOpt);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSAGetOverlappedResult);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSACancelOverlappedIO);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSAEventSelect);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSASetLastError);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSACreateEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSACloseEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSASetEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSAResetEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_WSAWaitForMultipleEvents);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamUserWriteProfileSettings);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLoadConfigParams);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpSaveConfigParams);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpConfigUPnP);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpConfig);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpGetConfigStatus);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLoadMachineAccount);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpSaveMachineAccount);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpCapture);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpEthernetInterceptSetCallbacks);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpEthernetInterceptXmit);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpEthernetInterceptRecv);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonGetStatus);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonGetQFlags);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonSetQFlags);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonSetQEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonClearQEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonGetQVals);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonSetQVals);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpLogonSetPState);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpGetVlanXboxName);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpSetVlanXboxName);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpGetActiveSocketList);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpNoteSystemTime);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpRegisterKeyForCallerType);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NetDll_XnpUnregisterKeyForCallerType);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentCreate);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentInstall);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentFlush);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentSetThumbnail);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentGetThumbnail);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentCreateDeviceEnumerator);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentGetDeviceName);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentLaunchImage);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamContentResolve);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowSigninUIp);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowFriendsUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowPlayersUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowMessagesUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowQuickChatUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowVoiceMailUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowAchievementsUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowPlayerReviewUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowMessageBoxUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowMessageComposeUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowGameInviteUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamShowFriendRequestUI);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__Refresh);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamUserAreUsersFriends);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamUserCheckPrivilege);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamReadTileToTexture);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamParseGamerTileKey);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamInputGetKeystrokeEx);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__VdQuerySystemCommandBuffer);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__VdSetSystemCommandBuffer);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__vsprintf);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__MmQueryAllocationSize);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__ObOpenObjectByPointer);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__ObLookupThreadByThreadId);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KeSetDisableBoostThread);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtSuspendThread);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtQueueApcThread);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__ObOpenObjectByName);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtPulseEvent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtSignalAndWaitForSingleObjectEx);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtWaitForMultipleObjectsEx);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__RtlCompareMemory);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XexUnloadImageAndExitThread);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XexGetModuleSection);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtCreateIoCompletion);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtSetIoCompletion);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtRemoveIoCompletion);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XAudioQueryDriverPerformance);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KeRaiseIrqlToDpcLevel);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KfLowerIrql);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KeTryToAcquireSpinLockAtRaisedIrql);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__ExAllocatePoolWithTag);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__MmAllocatePhysicalMemory);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KeReleaseSemaphore);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XAudioGetVoiceCategoryVolumeChangeMask);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KeResumeThread);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__KeInitializeSemaphore);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XMsgSystemProcessCall);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XNetLogonGetMachineID);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamVoiceHeadsetPresent);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamVoiceClose);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamVoiceSubmitPacket);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__XamVoiceCreate);//truct PPCContext &__restrict, unsigned char *));
PPC_FUNC_THROW(__imp__NtSetTimerEx);//truct PPCContext &__restrict, unsigned char *));


/*
* 
PPC_FUNC_THROW(__imp_XamVoiceHeadsetPresent);
PPC_FUNC_THROW(__imp_XamVoiceCreate);
PPC_FUNC_THROW(__imp_XamVoiceClose);
*/
void __imp__RtlImageXexHeaderField(PPCContext& __restrict ctx, uint8_t* base)
{
    std::cout << "RtlImageXexHeaderField Called" << std::endl;
}

void __imp__RtlEnterCriticalSection(PPCContext& __restrict ctx, uint8_t* base)
{
    std::cout << "RtlEnterCriticalSection Called" << std::endl;
}
